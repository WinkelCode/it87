name: Run packagetool for a package system
on:
  workflow_call:
    inputs:
      package_system:
        description: 'The package system to use'
        required: true
        type: string
      run_tests:
        description: 'Run tests after building the package'
        required: false
        default: false
        type: boolean
jobs:
  packagetool:
    runs-on: ubuntu-latest
    env:
      PACKAGE_SYSTEM: ${{ inputs.package_system }}
      DOCKER_CACHE_DIR: ${{ format('/tmp/GitHubActions-DockerCache-{0}', inputs.package_system) }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up job environment
        id: jobenv
        run: |
          printf 'CACHE_YEAR_AND_WEEK=%s\n' "$(date +Y%YW%V)" | tee -a "$GITHUB_OUTPUT"
          docker buildx create --use --driver=docker-container
          mkdir -p "${{ env.DOCKER_CACHE_DIR }}"
      - name: GitHub Actions Cache for Docker
        uses: actions/cache@v3
        with:
          path: ${{ env.DOCKER_CACHE_DIR }}
          key: docker-cache-${{ env.PACKAGE_SYSTEM }}-${{ steps.jobenv.outputs.CACHE_YEAR_AND_WEEK }}
      - name: Run packagetool.sh (no tests)
        if: ${{ !inputs.run_tests }}
        run: |
          ./packagetool.sh \
            --container_runtime=docker \
            --print_temp_dir=normal \
            --no_pkg_tests \
            --container_security_privileged \
            --local_cache_ci_mode \
            --keep_temp_dir \
            --package_system=${{ env.PACKAGE_SYSTEM }} \
            --local_cache_dir="${{ env.DOCKER_CACHE_DIR }}"
      - name: Run packagetool.sh (with tests)
        if: ${{ inputs.run_tests }}
        run: |
          ./packagetool.sh \
            --container_runtime=docker \
            --print_temp_dir=normal \
            --container_security_privileged \
            --local_cache_ci_mode \
            --keep_temp_dir \
            --package_system=${{ env.PACKAGE_SYSTEM }} \
            --local_cache_dir="${{ env.DOCKER_CACHE_DIR }}"
      - name: Upload .release folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ env.PACKAGE_SYSTEM }}
          path: ./.release