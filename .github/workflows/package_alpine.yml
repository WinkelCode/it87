name: Package module for Alpine Linux

on: workflow_dispatch # This will allow you to trigger the workflow manually from the web interface or the CLI. [1]
jobs:
  packagetool:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # This will clone the repository to the runner. [2]
      # - name: Elevate permissions
      #   run: sudo su 
      - name: Get current week number
        run: echo "WEEK_NUMBER=$(date +%V)" >>$GITHUB_OUTPUT # This will get the number of the current week and set it as an output variable. [2]
      - name: Echo current week number
        run: echo "${{ steps.get-current-week-number.outputs.WEEK_NUMBER }}"
      # - name: Restore /var/lib/containers cache
      #   uses: actions/cache@v3 # This will use the cache action to restore or create a cache for /var/lib/containers. [3]
      #   with:
      #     path: /var/lib/containers
      #     key: containers-${{ steps.get-current-week-number.outputs.WEEK_NUMBER }} # This will use the output of the previous step to create a cache key that expires every week. [3, 4]
      # - name: Run packagetool.sh
      #   run: ./packagetool.sh --container_runtime=podman --package_system=apk --print_temp_dir=normal # This will run the script from the root of the repo. [2]
      # # - name: Save /var/lib/containers cache
      # #   uses: actions/cache@v3 # This will use the cache action to save the cache for /var/lib/containers. [3]
      # #   with:
      # #     path: /var/lib/containers
      # #     key: containers-${{ steps.get-current-week-number.outputs.WEEK_NUMBER }} # This will use the same key as before to overwrite the cache. [3, 5]
      # - name: Upload .release folder as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: release-folder # This is the name of the artifact that you can use to download it later.
      #     path: ./.release # This is the path of the file or directory that you want to upload.