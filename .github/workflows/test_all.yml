name: Test packaging and dynamic building of the module
on: workflow_dispatch
env:
  STD_ENV_COMMAND: |
    printf 'CACHE_YEAR_AND_WEEK=%s\n' "$(date +Y%YW%V)" | tee -a "$GITHUB_OUTPUT"
    docker buildx create --use --driver=docker-container
  STD_RUN_COMMAND: |
    ./packagetool.sh \
      --container_runtime=docker \
      --print_temp_dir=normal \
      --container_security_privileged \
      --local_cache_ci_mode \
      --keep_temp_dir
jobs:
  apk:
    runs-on: ubuntu-latest
    env:
      PACKAGE_SYSTEM: apk
      DOCKER_CACHE_DIR: /tmp/GitHubActions-DockerCache-apk
    steps:
      - uses: actions/checkout@v3
      - name: Set up job environment
        id: jobenv
        run: |
          ${{ env.STD_ENV_COMMAND }}
      - name: GitHub Actions Cache for Docker
        uses: actions/cache@v3
        with:
          path: ${{ env.DOCKER_CACHE_DIR }}
          key: docker-cache-${{ env.PACKAGE_SYSTEM }}-${{ steps.jobenv.outputs.CACHE_YEAR_AND_WEEK }}
      - name: Run packagetool.sh
        run: |
          mkdir -p "${{ env.DOCKER_CACHE_DIR }}"
          ${{ env.STD_RUN_COMMAND }} \
            --package_system=${{ env.PACKAGE_SYSTEM }} \
            --local_cache_dir="${{ env.DOCKER_CACHE_DIR }}"
      - name: Upload .release folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ env.PACKAGE_SYSTEM }}
          path: ./.release
  deb:
    runs-on: ubuntu-latest
    env:
      PACKAGE_SYSTEM: deb
      DOCKER_CACHE_DIR: /tmp/GitHubActions-DockerCache-deb
    steps:
      - uses: actions/checkout@v3
      - name: Set up job environment
        id: jobenv
        run: |
          ${{ env.STD_ENV_COMMAND }}
      - name: GitHub Actions Cache for Docker
        uses: actions/cache@v3
        with:
          path: ${{ env.DOCKER_CACHE_DIR }}
          key: docker-cache-${{ env.PACKAGE_SYSTEM }}-${{ steps.jobenv.outputs.CACHE_YEAR_AND_WEEK }}
      - name: Run packagetool.sh
        run: |
          mkdir -p "${{ env.DOCKER_CACHE_DIR }}"
          ${{ env.STD_RUN_COMMAND }} \
            --package_system=${{ env.PACKAGE_SYSTEM }} \
            --local_cache_dir="${{ env.DOCKER_CACHE_DIR }}"
      - name: Upload .release folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ env.PACKAGE_SYSTEM }}
          path: ./.release
  rpm:
    runs-on: ubuntu-latest
    env:
      PACKAGE_SYSTEM: rpm
      DOCKER_CACHE_DIR: /tmp/GitHubActions-DockerCache-rpm
    steps:
      - uses: actions/checkout@v3
      - name: Set up job environment
        id: jobenv
        run: |
          ${{ env.STD_ENV_COMMAND }}
      - name: GitHub Actions Cache for Docker
        uses: actions/cache@v3
        with:
          path: ${{ env.DOCKER_CACHE_DIR }}
          key: docker-cache-${{ env.PACKAGE_SYSTEM }}-${{ steps.jobenv.outputs.CACHE_YEAR_AND_WEEK }}
      - name: Run packagetool.sh
        run: |
          mkdir -p "${{ env.DOCKER_CACHE_DIR }}"
          ${{ env.STD_RUN_COMMAND }} \
            --package_system=${{ env.PACKAGE_SYSTEM }} \
            --local_cache_dir="${{ env.DOCKER_CACHE_DIR }}"
      - name: Upload .release folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ env.PACKAGE_SYSTEM }}
          path: ./.release